#!/usr/bin/env ruby

require 'optparse'
require 'fileutils'

@options = {}
@dir = nil

optparse = OptionParser.new do |opts|
  opts.banner = "Usage: katello-backup /path/to/dir [options]\n eg: $ katello-backup /tmp/katello-backup"

  opts.on("--skip-pulp-content", "Create backup without Pulp content") do |skip_pulp|
    @options[:skip_pulp] = skip_pulp
  end

  opts.parse!

  if ARGV.length == 0
    opts.abort("**** ERROR: Please specify an export directory ****")
  elsif ARGV.length != 1
    puts opts
    exit(-1)
  end

  @dir = ARGV[0]
end

puts "Creating backup folder #{@dir}"
FileUtils.mkdir_p(@dir)
FileUtils.chown(nil, 'postgres', @dir)
FileUtils.chmod 0770, @dir
FileUtils.cd @dir

`katello-service stop`

CONFIGS=[
  '/etc/candlepin',
  '/etc/foreman',
  '/etc/foreman-proxy',
  '/etc/gutterball',
  '/etc/hammer',
  '/etc/httpd',
  '/etc/foreman-installer',
  '/etc/pki/katello',
  '/etc/pki/katello-certs-tools',
  '/etc/pki/pulp',
  '/etc/pulp',
  '/etc/puppet',
  '/etc/qpid',
  '/etc/qpid-dispatch',
  '/etc/sysconfig/tomcat*',
  '/etc/tomcat*',
  '/root/ssl-build',
  '/var/lib/candlepin',
  '/var/www/html/pub',
  '/var/lib/puppet/foreman_cache_data',
  '/var/lib/puppet/ssl'
]

puts "Backing up config files... "
`tar --selinux --create --gzip --file=config_files.tar.gz #{CONFIGS.join(' ')}`
puts "Done."

unless @options[:skip_pulp]
  puts "Backing up Pulp data... "
  `tar --selinux --create --file=pulp_data.tar /var/lib/pulp/ /var/www/pub/`
  puts "Done."
end

puts "Backing up postgres db... "
`tar --selinux --create --gzip --file=pgsql_data.tar.gz /var/lib/pgsql/data/`
puts "Done."

puts "Backing up mongo db... "
`tar --selinux --create --gzip --file=mongo_data.tar.gz --exclude=mongod.lock /var/lib/mongodb/`
puts "Done."

`katello-service start`

puts "**** BACKUP Complete, contents can be found in: #{@dir} ****"
